// 1. Populate the database with at least 15 documents.
db.FruitsMarket.insertMany([
  {
    "MarketName": "BasketShop",
    "Number_of_Employees": 20,
    "Types_of_Fruits": ["Banana", "Apple"],
    "Total_Sales": 50000,
    "Profit(%)": 20,
    "Rating": "A"
  },
  // Add more documents here
]);

// 2. List all the Markets having the fruit "Mango". Show only the Market name and Rating as output
db.FruitsMarket.find({ "Types_of_Fruits": "Mango" }, { "MarketName": 1, "Rating": 1 });

// 3. List all the Markets with number of Employees greater than 20, profit greater than 35% and having Rating "A"
db.FruitsMarket.find({
  "Number_of_Employees": { $gt: 20 },
  "Profit(%)": { $gt: 35 },
  "Rating": "A"
});

// 4. Update all the Markets rating with profit greater than 60% as 'A'
db.FruitsMarket.updateMany(
  { "Profit(%)": { $gt: 60 } },
  { $set: { "Rating": "A" } }
);

// 5. Count the number of Markets which has a rating "B" and having employee count greater than 30
db.FruitsMarket.count({ "Rating": "B", "Number_of_Employees": { $gt: 30 } });

// 6. Delete a Market which is having rating "C" and does not have the fruit "Banana"
db.FruitsMarket.deleteOne({ "Rating": "C", "Types_of_Fruits": { $ne: "Banana" } });

// 7. Update all the Markets whose rating is "B" with a bonus profit of 10%
db.FruitsMarket.updateMany(
  { "Rating": "B" },
  { $mul: { "Profit(%)": 1.1 } }
);

// 8. Remove the Rating for all the Markets which are having rating "C"
db.FruitsMarket.updateMany(
  { "Rating": "C" },
  { $unset: { "Rating": "" } }
);

// 9. Group all the Markets by their Rating and calculate the total number of employees using Aggregation
db.FruitsMarket.aggregate([
  { $group: { _id: "$Rating", totalEmployees: { $sum: "$Number_of_Employees" } } }
]);

// 10. Apply the map-reduce to Group all the Markets by their Rating and calculate the total number of employees
db.FruitsMarket.mapReduce(
  function() {
    emit(this.Rating, this.Number_of_Employees);
  },
  function(key, values) {
    return Array.sum(values);
  },
  { out: "market_employees" }
);

// To view the result:
db.market_employees.find();
